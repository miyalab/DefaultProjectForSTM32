/*
 * MIT License
 *
 * Copyright (c) 2021 MiYA LAB(K.Miyauchi)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * File   : Master.cpp
 * Author : K.Miyauchi
 *
 * Version : 1.00
 */

#include <I2C/Master.h>

//------------------------------------------------------------------------------
// MiYA LAB OSS
//------------------------------------------------------------------------------
namespace MiYALAB{
	//--------------------------------------------------------------------------
	// STM32F446RE
	//--------------------------------------------------------------------------
	namespace STM32F446RE{
		uint8_t I2C_MasterMode::Init(uint32_t clock)
		{
			uint8_t ret = HAL_OK;

			hI2C.Init.ClockSpeed = 100000;
			hI2C.Init.DutyCycle = I2C_DUTYCYCLE_2;
			hI2C.Init.OwnAddress1 = 0;
			hI2C.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
			hI2C.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
			hI2C.Init.OwnAddress2 = 0;
			hI2C.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
			hI2C.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;

			return ret;
		}

		I2C1_MasterMode::I2C1_MasterMode()
		{
			GPIO_InitTypeDef GpioInitStruct = {0};

			// クロック許可
			__HAL_RCC_GPIOB_CLK_ENABLE();
			__HAL_RCC_I2C1_CLK_ENABLE();

			// GPIO設定
		    GpioInitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
		    GpioInitStruct.Mode = GPIO_MODE_AF_OD;
		    GpioInitStruct.Pull = GPIO_PULLUP;
		    GpioInitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
		    GpioInitStruct.Alternate = GPIO_AF4_I2C1;
		    HAL_GPIO_Init(GPIOB, &GpioInitStruct);

			hI2C.Instance = I2C1;
		}

		I2C1_MasterMode::~I2C1_MasterMode()
		{
			__HAL_RCC_I2C1_CLK_DISABLE();
		}


	}
}

//------------------------------------------------------------------------------
// end of file
//------------------------------------------------------------------------------
/*
 * 2021.01.30 ファイル作成
 */
